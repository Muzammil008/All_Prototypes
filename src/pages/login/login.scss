page-login {
 

  .form-wrapper {
    max-width: 30%;
    min-width: 300px;
    padding: 50px 30px 50px 30px;
    margin: 50px auto;   
    background-color: #ffffff;
    border-radius: 5px;
    box-shadow: 0 15px 35px rgba(50,50,93,.1),0 5px 15px rgba(0,0,0,.07);
  }

  .field {
    display: flex;
    flex-flow: column-reverse;
    margin-bottom: 1em;
  }
  /**
  * Add a transition to the label and input.
  * I'm not even sure that touch-action: manipulation works on
  * inputs, but hey, it's new and cool and could remove the 
  * pesky delay.
  */
  label, input {
    transition: all 0.2s;
    touch-action: manipulation;
  }
  
  input {
    font-size: 14px;
    border: 0;
    border-bottom: 1px solid #ccc;
    font-family: inherit;
    -webkit-appearance: none;
    border-radius: 0;
    padding: 0;
    cursor: text;
  }
  
  input:focus {
    outline: 0;
    border-bottom: 1px solid #666;
  }
  
  label {
    text-transform: uppercase;
    letter-spacing: 0.05em;
    font-size: 10px;
  }
  /**
  * Translate down and scale the label up to cover the placeholder,
  * when following an input (with placeholder-shown support).
  * Also make sure the label is only on one row, at max 2/3rds of the
  * fieldâ€”to make sure it scales properly and doesn't wrap.
  */
  input:placeholder-shown + label {
    cursor: text;
    max-width: 66.66%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    transform-origin: left bottom;
    transform: translate(0, 2.125rem) scale(1.5);
  }
  /**
  * By default, the placeholder should be transparent. Also, it should 
  * inherit the transition.
  */
  ::-webkit-input-placeholder {
    opacity: 0;
    transition: inherit;
  }
  /**
  * Show the placeholder when the input is focused.
  */
  input:focus::-webkit-input-placeholder {
    opacity: 1;
  }
  /**
  * When the element is focused, remove the label transform.
  * Also, do this when the placeholder is _not_ shown, i.e. when 
  * there's something in the input at all.
  */
  input:not(:placeholder-shown) + label,
  input:focus + label {
    transform: translate(0, 0) scale(1);
    cursor: pointer;
  }
  
  .field{
    position: relative;
    .help{
      position: absolute;
      right: 5px;
      top: 50%;
      transform: translateY(-50%);
    }
  }
  
      
  .fab {
    contain: layout;
    border-radius: 50%;
    &.fab-close-active{
    
      // width: 40px;
      // height: 40px;
      // line-height: 40px;
    
    }
}
.fab .button-inner{
  position: relative;
}

button[ion-fab] {
    overflow: visible;
    position: relative;
    outline: none;

    ion-label {
      position: absolute;
      top: -45px;
      line-height: 24px;
    }
}
/*
ion-fab-list {
  -webkit-transition: all 0.5s ease-in-out;
  -moz-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  margin: 0;
  opacity: 0;
  visibility: hidden;
  animation-duration: 0.5s;

  transition-property: opacity, visibility, margin;
  transition-duration: 1s, 0s, 0s;
  transition-delay: s, 1s, 0s;

  //display: block;
  &.fab-list-active{
    margin: 115px 0;
    opacity: 1;
    transition-property: visibility, opacity, margin;
    transition-duration: 0s, 1s, 1s;
  }
}

ion-fab-list[side=left] {
  -webkit-transition: all 0.5s ease-in-out;
  -moz-transition: all 0.5s ease-in-out;
  -o-transition: all 0.5s ease-in-out;
  transition: all 0.5s ease-in-out;
  margin: 0;
  opacity: 0;
  visibility: hidden;
  &.fab-list-active{
    margin: 0 120px;
    opacity: 1;
    transition-property: visibility, opacity, margin;
    transition-duration: 0s, 1s, 1s;
  }  
}

ion-fab-list[side=right] {
  margin: 0;  
  opacity: 1;
  -webkit-transition: all 0.1s ease-in-out;
    -moz-transition: all 0.1s ease-in-out;
    -o-transition: all 0.1s ease-in-out;
    transition: all 0.1s ease-in-out;
  &.fab-list-active{
    margin: 0 120px;
    // transition-property: visibility, opacity, margin;
    // transition-duration: 0s, 1s, 1s;
  }
  .fab-in-list{
    // margin: 0;
    // opacity: 0;
    //transform: scale(0.5);
    
    &.show{
      // margin: 0 120px;
      // opacity: 1;
      // transform: scale(1);
    }
  }
}

ion-fab-list[side=top]{
  .fab-in-list{
    margin-bottom: -112px;
    opacity: 0;
    transform: scale(0.5);
    -webkit-transition: all 0.1s ease-in-out;
    -moz-transition: all 0.1s ease-in-out;
    -o-transition: all 0.1s ease-in-out;
    transition: all 0.1s ease-in-out;
    &.show{
      margin-bottom: 8px;
      opacity: 1;
      transform: scale(1);
    }
  }
}
*/

.fab-in-list{
  &.show{

  }
}

.fab-in-list {
  width: 50px;
  height: 50px;
}

.ion-fab{

  [class^="ion-fab-"]{
    opacity: 0;
    visibility: hidden;

    transition-property: opacity, visibility, margin;
    transition-duration: 0.5s, 1s, 0.2s;
    transition-delay: 0.5s, 0s, 0s;
    
  }

  ion-label{
    // -webkit-transition: all 0.1s ease-in-out;
    // -moz-transition: all 0.1s ease-in-out;
    // -o-transition: all 0.1s ease-in-out;
    // transition: all 0.1s ease-in-out;
    color: #333;
    font-size: 0px;
  }

  &.active{

    ion-label{
      color: #fff;
      font-size: 13px;
    }
    

    [class^="ion-fab-"]{
      opacity: 1;
      visibility: visible;
      transition-property: visibility, opacity, margin;
      transition-duration: 0s, 0.2s, 0.2s;
    }

    .ion-fab--top{
      margin: 100px auto;
    }

    .ion-fab--left{
      margin: 0 100px;
    }

    .ion-fab--right{
      margin: 0 100px;
    }

  }// &.active

  .ion-fab--top {
    top: auto;
    bottom: 0;
    display: flex;    
    position: absolute;
  }
  
  .ion-fab--left {
    flex-direction: row-reverse;
    display: flex;
    right: 0;
    position: absolute;
  }
  
  .ion-fab--right {
    display: flex;
    position: absolute;
    left: 0;
    flex-direction: row-reverse;
  }

  [class^='ion-fab-'] .fab-md {
    background-color: #fff;
    color: #212121;    
    width: 40px;
    height: 40px;
    font-size: 13px;
  }

}// .ion-fab





}



